"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[592],{101:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>c,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"smartcard/DoD-SmartCard-Admins","title":"DoD | Admin","description":"This guide provides step-by-step instructions for system administrators on enforcing Common Access Card (CAC) authentication on MDM-managed devices for DoD employees. Due to current Apple platform limitations, full CAC enforcement (including keychain access and system updates) is not yet possible. However, with the right configuration, you can achieve up to 90% CAC enforcement for most workflows.","source":"@site/docs/smartcard/DoD-SmartCard-Admins.md","sourceDirName":"smartcard","slug":"/smartcard/DoD-SmartCard-Admins","permalink":"/docs/smartcard/DoD-SmartCard-Admins","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/smartcard/DoD-SmartCard-Admins.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"title":"DoD | Admin"},"sidebar":"smartCardGuideSidebar","previous":{"title":"DoD | User","permalink":"/docs/smartcard/DoD-SmartCard-Users"},"next":{"title":"Tools & Apps","permalink":"/docs/smartcard/Tools-Apps"}}');var o=t(4848),a=t(8453),i=t(1470),s=t(9365);const c={sidebar_position:4,title:"DoD | Admin"},l="DoD CAC Setup \u2013 Admin Guide",d={},u=[{value:"<strong>CAC Enforcement Workflow</strong>",id:"cac-enforcement-workflow",level:2},{value:"<strong>Enforcing CAC</strong>",id:"enforcing-cac",level:2},{value:"Step 1. Prior Requirements",id:"step-1-prior-requirements",level:3},{value:"Step 2. Create a Smart Card Enforcement Profile",id:"step-2-create-a-smart-card-enforcement-profile",level:3},{value:"Step 3. Update PAM Configuration",id:"step-3-update-pam-configuration",level:3},{value:"Step 4. Upload Smart Card Configuration Files",id:"step-4-upload-smart-card-configuration-files",level:3},{value:"Step 5. Enforce Smart Card Policies",id:"step-5-enforce-smart-card-policies",level:3},{value:"Step 6. Verify Functionality",id:"step-6-verify-functionality",level:3},{value:"Step 7. Test, Test, Test",id:"step-7-test-test-test",level:3},{value:"<strong>How to Exempt a User from CAC Enforcement</strong>",id:"how-to-exempt-a-user-from-cac-enforcement",level:2},{value:"<strong>Uninstall PAM Configuration</strong>",id:"uninstall-pam-configuration",level:2}];function p(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"dod-cac-setup--admin-guide",children:"DoD CAC Setup \u2013 Admin Guide"})}),"\n",(0,o.jsx)(n.p,{children:"This guide provides step-by-step instructions for system administrators on enforcing Common Access Card (CAC) authentication on MDM-managed devices for DoD employees. Due to current Apple platform limitations, full CAC enforcement (including keychain access and system updates) is not yet possible. However, with the right configuration, you can achieve up to 90% CAC enforcement for most workflows."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Important Recommendations:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Deploy DoD Certificates First:"})," Before enforcing any smart card policies, ensure that DoD certificates are deployed to the device. Follow the ",(0,o.jsx)(n.a,{href:"../certificate/DoD-Certificates-Admins",children:"DoD Certificates Admin Guide"})," for details."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Establish a Smart Card Pairing Workflow:"})," Before enabling enforcement, set up a workflow for users to pair their smart card with their account. If enforcement is enabled without pairing, users will be locked out of their devices."]}),"\n"]}),"\n",(0,o.jsxs)(n.admonition,{title:"Recommended",type:"info",children:[(0,o.jsxs)(n.p,{children:["For maximum security and scalability, devices should be managed with a Mobile Device Management (MDM) system. The best practice for deploying DoD CAC enforcement is to use MDM to push a configuration profile (",(0,o.jsx)(n.code,{children:".mobileconfig"})," file) with the required settings to your entire fleet."]}),(0,o.jsxs)(n.p,{children:["If your organization does ",(0,o.jsx)(n.strong,{children:"not"})," use MDM, enforcing CAC is not recommended. In this case, refer to the DoD User Guide for alternative approaches."]})]}),"\n",(0,o.jsx)(n.h2,{id:"cac-enforcement-workflow",children:(0,o.jsx)(n.strong,{children:"CAC Enforcement Workflow"})}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Deploy DoD Certificates to Device:"})," Use MDM to push required DoD certificates."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Guide Users Through Forced Pairing:"})," Require users to pair their smart card with their account before proceeding. This can be enforced via MDM or onboarding scripts."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Verify Pairing Success:"})," Confirm that the smart card is correctly paired to the user account."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"(Optional) Exempt Admin Account or Unenforce for Troubleshooting:"})," Consider maintaining an exempt admin account or a workflow to temporarily disable enforcement for troubleshooting purposes."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Enforce Smart Card Policies:"})," Once pairing is verified, enable CAC enforcement via MDM."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Update PAM Configuration:"})," After smart card enforcement is enabled, update your PAM (Pluggable Authentication Modules) configuration files to support CAC authentication for additional system functions as needed."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"enforcing-cac",children:(0,o.jsx)(n.strong,{children:"Enforcing CAC"})}),"\n",(0,o.jsx)(n.h3,{id:"step-1-prior-requirements",children:"Step 1. Prior Requirements"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Deploy DoD Certificates:"})," Deploy DoD Certificates to all devices by following the official guide: ",(0,o.jsx)(n.a,{href:"../certificate/DoD-Certificates-Admins",children:"DoD Certificates Installation Guide"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Establish CAC Pairing Workflow:"})," We recommend using the ",(0,o.jsx)(n.strong,{children:"Pair PIV ID"})," workflow. This method can be easily pushed to users, requires minimal user interaction, supports CAC swapping, and allows a user to pair multiple CACs. For more details, see the ",(0,o.jsx)(n.a,{href:"../smartcard/DoD-SmartCard-Users",children:"DoD | User Guide"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Verify CAC Pairing:"})," Ensure that CAC pairing is present for each user before enabling enforcement. You can use a script to check for pairing status, such as the example below:"]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'#!/bin/zsh\n# Check to see if SmartCard is user paired, and if the SmartcardLogin.plist exists\n# and contains the required formatString for Kerberos\n\n# Check for logged in user.\ncurrentUser=$(scutil <<< "show State:/Users/ConsoleUser" | awk -F\': \' \'/[[:space:]]+Name[[:space:]]:/ { if ( $2 != "loginwindow" ) { print $2 }}\')\n\n\n# Check if the file /etc/SmartcardLogin.plist exists and contains the Kerberos formatString\nif [[ -f /etc/SmartcardLogin.plist ]]; then\n    formatString=$(plutil -extract "AttributeMapping.dsAttributeString" raw /etc/SmartcardLogin.plist 2>/dev/null)\n    if [[ "$formatString" == "dsAttrTypeStandard:AltSecurityIdentities" ]]; then\n        result="Paired"\n    else\n        result="NotPaired"\n    fi\nelse\n    # Check for pairing based on tokenidentity\n    tokenCheck=$(dscl /Local/Default read /Users/"$currentUser" AuthenticationAuthority 2>/dev/null | grep -c tokenidentity)\n    if [[ "$tokenCheck" -gt 0 ]]; then\n        result="Paired"\n    else\n        result="NotPaired"\n    fi\nfi\n\n# Output the result\necho "<result>$result</result>"\n\nexit 0\n'})}),"\n",(0,o.jsx)(n.h3,{id:"step-2-create-a-smart-card-enforcement-profile",children:"Step 2. Create a Smart Card Enforcement Profile"}),"\n",(0,o.jsxs)(n.p,{children:["To enforce CAC authentication, configure the ",(0,o.jsx)(n.code,{children:"com.apple.security.smartcard"})," policy on managed devices. This is typically accomplished by deploying either a configuration profile (",(0,o.jsx)(n.code,{children:".mobileconfig"}),") or a property list (",(0,o.jsx)(n.code,{children:".plist"}),") through your MDM solution. Below are example configurations with detailed explanations for each value\u2014adjust these settings as needed for your environment."]}),"\n",(0,o.jsxs)(n.p,{children:["See ",(0,o.jsx)(n.a,{href:"https://developer.apple.com/documentation/devicemanagement/smartcard",children:"Apple SmartCard Payload Documentation"})," and ",(0,o.jsx)(n.a,{href:"https://support.apple.com/guide/deployment/advanced-smart-card-options-dep7b2ede1e3/web",children:"Advanced Smart Card Options"})," for more details on each key."]}),"\n",(0,o.jsxs)(i.A,{children:[(0,o.jsx)(s.A,{value:"mobileconfig",label:"Example .mobileconfig",default:!0,children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:'\x3c!-- Example: Smart Card Enforcement.mobileconfig --\x3e\n<?xml version="1.0" encoding="UTF-8"?>\n<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">\n<plist version="1.0">\n<dict>\n  <key>PayloadContent</key>\n  <array>\n    <dict>\n      \x3c!-- PayloadDescription: Optional description for this payload --\x3e\n      <key>PayloadDescription</key>\n      <string></string>\n      \x3c!-- PayloadDisplayName: Name shown in Profiles UI --\x3e\n      <key>PayloadDisplayName</key>\n      <string>SmartCard</string>\n      \x3c!-- PayloadEnabled: Whether this payload is enabled --\x3e\n      <key>PayloadEnabled</key>\n      <true/>\n      \x3c!-- PayloadIdentifier: Unique identifier for this payload --\x3e\n      <key>PayloadIdentifier</key>\n      <string>com.cac-for-mac.smartcard.enforcement</string>\n      \x3c!-- PayloadType: Must be com.apple.security.smartcard for smart card enforcement --\x3e\n      <key>PayloadType</key>\n      <string>com.apple.security.smartcard</string>\n      \x3c!-- PayloadUUID: Unique UUID for this payload --\x3e\n      <key>PayloadUUID</key>\n      <string>6A2F1B3C-9D4E-4A1B-8C2F-1234567890AB</string>\n      \x3c!-- PayloadVersion: Version number for this payload --\x3e\n      <key>PayloadVersion</key>\n      <integer>1</integer>\n      \x3c!-- \n        UserPairing (boolean): \n        If false, users don\u2019t get the pairing dialog, although existing pairings still work.\n        Default: true\n      --\x3e\n      <key>UserPairing</key>\n      <false/>\n      \x3c!-- \n        allowSmartCard (boolean): \n        If false, disables the SmartCard for logins, authorizations, and screen saver unlocking. \n        Still allowed for other functions, such as signing emails and accessing the web. \n        Restart required for changes. \n        Default: true\n      --\x3e\n      <key>allowSmartCard</key>\n      <true/>\n      \x3c!-- \n        checkCertificateTrust (integer): \n        Configures the certificate trust check.\n        0: Off\n        1: Standard validity check (no revocation)\n        2: Soft revocation check (default: valid unless explicitly revoked)\n        3: Hard revocation check (default: invalid unless explicitly OK)\n        Default: 0\n      --\x3e\n      <key>checkCertificateTrust</key>\n      <integer>2</integer>\n      \x3c!-- \n        oneCardPerUser (boolean): \n        If true, a user can pair with only one SmartCard, although existing pairings are allowed if already set up.\n        Default: false\n      --\x3e\n      <key>oneCardPerUser</key>\n      <false/>\n      \x3c!-- \n        enforceSmartCard (boolean): \n        If true, a user can only log in or authenticate with a SmartCard.\n        Available in macOS 10.13.2 and later.\n        Default: false\n      --\x3e\n      <key>enforceSmartCard</key>\n      <true/>\n      \x3c!-- \n        allowUnmappedUsers (integer): \n        1 = allow users not mapped to a smart card, 0 = disallow\n      --\x3e\n      <key>allowUnmappedUsers</key>\n      <integer>1</integer>\n      \x3c!-- \n        tokenRemovalAction (integer): \n        If 1, the system enables the screen saver when the SmartCard is removed.\n        Available in macOS 10.13.4 and later.\n        Default: 0\n        Possible Values: 0, 1\n      --\x3e\n      \x3c!-- <key>tokenRemovalAction</key>\n      <integer>1</integer> --\x3e\n    </dict>\n  </array>\n  \x3c!-- PayloadDescription: Description for the overall profile --\x3e\n  <key>PayloadDescription</key>\n  <string>Settings for Smartcard Enforcement</string>\n  \x3c!-- PayloadDisplayName: Name for the overall profile --\x3e\n  <key>PayloadDisplayName</key>\n  <string>Smartcard Enforcement</string>\n  \x3c!-- PayloadEnabled: Whether the profile is enabled --\x3e\n  <key>PayloadEnabled</key>\n  <true/>\n  \x3c!-- PayloadIdentifier: Unique identifier for the profile --\x3e\n  <key>PayloadIdentifier</key>\n  <string>com.cac-for-mac.smartcard.profile.1B2C3D4E-5F6A-7B8C-9D0E-ABCDEF123456</string>\n  \x3c!-- PayloadOrganization: Organization name --\x3e\n  <key>PayloadOrganization</key>\n  <string>Your Organization</string>\n  \x3c!-- PayloadRemovalDisallowed: If true, prevents removal of the profile --\x3e\n  <key>PayloadRemovalDisallowed</key>\n  <true/>\n  \x3c!-- PayloadScope: System = applies to all users --\x3e\n  <key>PayloadScope</key>\n  <string>System</string>\n  \x3c!-- PayloadType: Configuration profile type --\x3e\n  <key>PayloadType</key>\n  <string>Configuration</string>\n  \x3c!-- PayloadUUID: Unique UUID for the profile --\x3e\n  <key>PayloadUUID</key>\n  <string>1B2C3D4E-5F6A-7B8C-9D0E-ABCDEF123456</string>\n  \x3c!-- PayloadVersion: Version number for the profile --\x3e\n  <key>PayloadVersion</key>\n  <integer>1</integer>\n</dict>\n</plist>\n'})})}),(0,o.jsx)(s.A,{value:"plist",label:"Example .plist",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:'\x3c!-- Example: /Library/Preferences/com.apple.security.smartcard.plist --\x3e\n<?xml version="1.0" encoding="UTF-8"?>\n<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">\n<plist version="1.0">\n<dict>\n  \x3c!-- \n    UserPairing (boolean): \n    If false, users don\u2019t get the pairing dialog, although existing pairings still work.\n    Default: true\n  --\x3e\n  <key>UserPairing</key>\n  <false/>\n  \x3c!-- \n    allowSmartCard (boolean): \n    If false, disables the SmartCard for logins, authorizations, and screen saver unlocking. \n    Still allowed for other functions, such as signing emails and accessing the web. \n    Restart required for changes. \n    Default: true\n  --\x3e\n  <key>allowSmartCard</key>\n  <true/>\n  \x3c!-- \n    checkCertificateTrust (integer): \n    Configures the certificate trust check.\n    0: Off\n    1: Standard validity check (no revocation)\n    2: Soft revocation check (default: valid unless explicitly revoked)\n    3: Hard revocation check (default: invalid unless explicitly OK)\n    Default: 0\n  --\x3e\n  <key>checkCertificateTrust</key>\n  <integer>2</integer>\n  \x3c!-- \n    oneCardPerUser (boolean): \n    If true, a user can pair with only one SmartCard, although existing pairings are allowed if already set up.\n    Default: false\n  --\x3e\n  <key>oneCardPerUser</key>\n  <false/>\n  \x3c!-- \n    enforceSmartCard (boolean): \n    If true, a user can only log in or authenticate with a SmartCard.\n    Available in macOS 10.13.2 and later.\n    Default: false\n  --\x3e\n  <key>enforceSmartCard</key>\n  <true/>\n  \x3c!-- \n    allowUnmappedUsers (integer): \n    1 = allow users not mapped to a smart card, 0 = disallow\n  --\x3e\n  <key>allowUnmappedUsers</key>\n  <integer>1</integer>\n  \x3c!-- \n    tokenRemovalAction (integer): \n    If 1, the system enables the screen saver when the SmartCard is removed.\n    Available in macOS 10.13.4 and later.\n    Default: 0\n    Possible Values: 0, 1\n  --\x3e\n  \x3c!-- <key>tokenRemovalAction</key>\n  <integer>1</integer> --\x3e\n</dict>\n</plist>\n'})})})]}),"\n",(0,o.jsx)(n.h3,{id:"step-3-update-pam-configuration",children:"Step 3. Update PAM Configuration"}),"\n",(0,o.jsxs)(n.p,{children:["To enable CAC authentication for system functions such as ",(0,o.jsx)(n.code,{children:"sudo"}),", ",(0,o.jsx)(n.code,{children:"login"}),", and ",(0,o.jsx)(n.code,{children:"su"}),", you must update the relevant PAM (Pluggable Authentication Modules) configuration files. Below are two scripts: one that enables CAC authentication (recommended for CAC-enforced environments), and the default configuration for reference."]}),"\n",(0,o.jsx)(n.admonition,{type:"warning",children:(0,o.jsx)(n.p,{children:"Modifying PAM configuration files can impact authentication and potentially prevent logins or sudo access if misconfigured. Test these changes thoroughly on a small group of devices before deploying to your entire fleet."})}),"\n",(0,o.jsxs)(i.A,{children:[(0,o.jsx)(s.A,{value:"cac-pam",label:"CAC-Enabled PAM (Recommended)",default:!0,children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"#!/bin/bash\n# This script configures PAM to support CAC authentication for sudo, login, and su.\n\n# Write a new sudo PAM file to require CAC (pam_smartcard.so) for sudo access.\ncat > /etc/pam.d/sudo << SUDO_END\n# sudo: auth account password session\nauth        sufficient    pam_smartcard.so      # Allow CAC authentication\nauth        required      pam_opendirectory.so  # Fallback to local directory\nauth        required      pam_deny.so           # Deny if above fail\naccount     required      pam_permit.so\npassword    required      pam_deny.so\nsession     required      pam_permit.so\nSUDO_END\n\nchmod 444 /etc/pam.d/sudo\nchown root:wheel /etc/pam.d/sudo\n\n# Write a new login PAM file to support CAC and other authentication methods.\ncat > /etc/pam.d/login << LOGIN_END\n# login: auth account password session\nauth        sufficient    pam_smartcard.so      # Allow CAC authentication\nauth        optional      pam_krb5.so use_kcminit\nauth        optional      pam_ntlm.so try_first_pass\nauth        optional      pam_mount.so try_first_pass\nauth        required      pam_opendirectory.so try_first_pass\nauth        required      pam_deny.so\naccount     required      pam_nologin.so\naccount     required      pam_opendirectory.so\npassword    required      pam_opendirectory.so\nsession     required      pam_launchd.so\nsession     required      pam_uwtmp.so\nsession     optional      pam_mount.so\nLOGIN_END\n\nchmod 644 /etc/pam.d/login\nchown root:wheel /etc/pam.d/login\n\n# Write a new su PAM file to require CAC for su access.\ncat > /etc/pam.d/su << SU_END\n# su: auth account password session\nauth        sufficient    pam_smartcard.so      # Allow CAC authentication\nauth        required      pam_rootok.so\nauth        required      pam_group.so no_warn group=admin,wheel ruser root_only fail_safe\naccount     required      pam_permit.so\naccount     required      pam_opendirectory.so no_check_shell\npassword    required      pam_opendirectory.so\nsession     required      pam_launchd.so\nSU_END\n\nchmod 644 /etc/pam.d/su\nchown root:wheel /etc/pam.d/su\n"})})}),(0,o.jsx)(s.A,{value:"default-pam",label:"Default PAM (macOS)",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"#!/bin/bash\n# This script restores the default macOS PAM configuration for sudo, login, and su.\n\n# Default sudo PAM file (no CAC)\ncat > /etc/pam.d/sudo << SUDO_END\n# sudo: auth account password session\nauth       sufficient     pam_smartcard.so\nauth       required       pam_opendirectory.so\naccount    required       pam_permit.so\npassword   required       pam_deny.so\nsession    required       pam_permit.so\nSUDO_END\n\nchmod 444 /etc/pam.d/sudo\nchown root:wheel /etc/pam.d/sudo\n\n# Default login PAM file\ncat > /etc/pam.d/login << LOGIN_END\n# login: auth account password session\nauth       optional       pam_krb5.so use_kcminit\nauth       optional       pam_ntlm.so try_first_pass\nauth       optional       pam_mount.so try_first_pass\nauth       required       pam_opendirectory.so try_first_pass\naccount    required       pam_nologin.so\naccount    required       pam_opendirectory.so\npassword   required       pam_opendirectory.so\nsession    required       pam_launchd.so\nsession    required       pam_uwtmp.so\nsession    optional       pam_mount.so\nLOGIN_END\n\nchmod 644 /etc/pam.d/login\nchown root:wheel /etc/pam.d/login\n\n# Default su PAM file\ncat > /etc/pam.d/su << SU_END\n# su: auth account session\nauth       sufficient     pam_rootok.so\nauth       required       pam_opendirectory.so\naccount    required       pam_group.so no_warn group=admin,wheel ruser root_only fail_safe\naccount    required       pam_opendirectory.so no_check_shell\npassword   required       pam_opendirectory.so\nsession    required       pam_launchd.so\nSU_END\n\nchmod 644 /etc/pam.d/su\nchown root:wheel /etc/pam.d/su\n"})})})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"What does this script do?"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"sudo"}),": Adds ",(0,o.jsx)(n.code,{children:"pam_smartcard.so"})," as sufficient, allowing CAC authentication for sudo. If CAC is not present, falls back to local directory authentication."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"login"}),": Adds ",(0,o.jsx)(n.code,{children:"pam_smartcard.so"})," as sufficient, enabling CAC authentication at login. Other modules (Kerberos, NTLM, etc.) remain optional or required as fallback."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"su"}),": Adds ",(0,o.jsx)(n.code,{children:"pam_smartcard.so"})," as sufficient, allowing CAC authentication for switching users (su). Other checks (root, group, etc.) remain enforced."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Permissions"}),": Sets correct permissions and ownership for each PAM file to ensure system security."]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"step-4-upload-smart-card-configuration-files",children:"Step 4. Upload Smart Card Configuration Files"}),"\n",(0,o.jsxs)(n.p,{children:["To deploy CAC enforcement, upload the ",(0,o.jsx)(n.code,{children:".mobileconfig"}),", ",(0,o.jsx)(n.code,{children:".plist"}),", and any related scripts to your MDM solution. It is also recommended to upload uninstall scripts and ensure exempt accounts are set up."]}),"\n",(0,o.jsx)(n.p,{children:"Below are guides for uploading configuration profiles and scripts with popular MDMs:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://learn.jamf.com/en-US/bundle/jamf-pro-documentation-current/page/Computer_Configuration_Profiles.html#ariaid-title5",children:"Jamf Pro: Uploading and Deploying Configuration Profiles"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://learn.jamf.com/en-US/bundle/jamf-pro-documentation-current/page/Scripts.html",children:"Jamf Pro: Deploying Scripts"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://support.kandji.io/kb/custom-profiles-overview",children:"Kandji: Uploading Custom Profiles"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://support.kandji.io/kb/custom-scripts-overview",children:"Kandji: Custom Scripts"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/intune/intune-service/configuration/custom-settings-macos",children:"Intune: Add or Create Configuration Profiles"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/intune/intune-service/apps/macos-shell-scripts",children:"Intune: Deploy Scripts"})}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"step-5-enforce-smart-card-policies",children:"Step 5. Enforce Smart Card Policies"}),"\n",(0,o.jsx)(n.admonition,{type:"warning",children:(0,o.jsxs)(n.p,{children:["Before enforcing smart card policies, ensure every user has a CAC paired with their account ",(0,o.jsx)(n.strong,{children:"or"})," that you have an ",(0,o.jsx)(n.a,{href:"#how-to-exempt-a-user-from-cac-enforcement",children:"exempt admin account available"}),". Failing to do so may result in being locked out of the device."]})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Assign the smart card enforcement profile (",(0,o.jsx)(n.code,{children:".mobileconfig"})," or ",(0,o.jsx)(n.code,{children:".plist"}),") to the appropriate device groups or users in your MDM."]}),"\n",(0,o.jsx)(n.li,{children:"Deploy the profile to all targeted devices."}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Thoroughly test this configuration on a small set of devices before expanding deployment to your entire fleet. Confirm that CAC enforcement is working as intended and that users can access their accounts without issue."}),"\n",(0,o.jsxs)(n.p,{children:["Once you have validated successful CAC enforcement and user access, you can safely deploy the PAM configuration script (see Step 3) to enable CAC authentication for additional system functions such as ",(0,o.jsx)(n.code,{children:"sudo"}),", ",(0,o.jsx)(n.code,{children:"login"}),", and ",(0,o.jsx)(n.code,{children:"su"}),"."]}),"\n",(0,o.jsx)(n.h3,{id:"step-6-verify-functionality",children:"Step 6. Verify Functionality"}),"\n",(0,o.jsx)(n.p,{children:"After deploying the smart card enforcement profile and updating PAM configuration, thoroughly verify that CAC authentication is functioning as intended across all targeted system functions."}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Test login, sudo, and su operations with a CAC on several devices."}),"\n",(0,o.jsx)(n.li,{children:"Confirm that users without a paired CAC or those not in the exempt group are unable to authenticate."}),"\n",(0,o.jsx)(n.li,{children:"Ensure that exempt admin/service accounts can still access the system as intended."}),"\n",(0,o.jsx)(n.li,{children:"Check for any unexpected lockouts or authentication issues and resolve them before proceeding with a wider deployment."}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"If any issues are detected, use your exempt account to regain access and adjust your configuration or policies as needed."}),"\n",(0,o.jsxs)(n.admonition,{type:"important",children:[(0,o.jsx)(n.mdxAdmonitionTitle,{}),(0,o.jsx)(n.p,{children:"If you are required to comply with DISA STIGs or other local security policies, you may need to further adjust certain settings or smart card enforcement options to meet those requirements. Review your organization's compliance documentation and test accordingly."})]}),"\n",(0,o.jsx)(n.h3,{id:"step-7-test-test-test",children:"Step 7. Test, Test, Test"}),"\n",(0,o.jsx)(n.p,{children:"Smart card enforcement\u2014especially when combined with compliance requirements\u2014demands extensive testing. Some authentication functions or workflows may not work as expected depending on your complete setup, including:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"The method used for CAC pairing"}),"\n",(0,o.jsx)(n.li,{children:"The deployment and trust of DoD certificates"}),"\n",(0,o.jsx)(n.li,{children:"The specific compliance benchmarks or security policies (e.g., DISA STIGs) you must meet"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Test all critical user and admin workflows, including login, sudo, su, and any other authentication-dependent processes. Validate that your configuration meets both operational and compliance requirements before deploying at scale."}),"\n",(0,o.jsx)(n.h2,{id:"how-to-exempt-a-user-from-cac-enforcement",children:(0,o.jsx)(n.strong,{children:"How to Exempt a User from CAC Enforcement"})}),"\n",(0,o.jsxs)(n.p,{children:["If you used the CAC PIV ID pairing workflow, the dedicated group called ",(0,o.jsx)(n.code,{children:"EXEMPT_GROUP"})," should already exist on your system. If it does not exist (for example, if you did not use the pairing workflow), you will need to create ",(0,o.jsx)(n.code,{children:"/private/etc/SmartcardLogin.plist"})," and configure it according to ",(0,o.jsx)(n.a,{href:"https://support.apple.com/guide/deployment/configure-a-mac-smart-cardonly-authentication-depfce8de48b/web",children:"Apple's documentation"}),"."]}),"\n",(0,o.jsxs)(n.admonition,{type:"important",children:[(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"Exempting users from CAC enforcement should be reserved for admin or service accounts only, to provide a backup option in case of lockout or for troubleshooting. For regular local users, it is more secure to remove the enforcement policy via MDM rather than adding them to the exempt group. This approach maintains a strong security posture and minimizes unnecessary exceptions."})}),(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Security Note:"}),(0,o.jsx)(n.br,{}),"\n",(0,o.jsx)(n.em,{children:'Admin or service accounts in the exempt group should have additional protections, such as a disabled ("dead") password, a password that is rotated frequently, or other controls to ensure the account cannot be easily used for regular logins. You may also consider setting these accounts as standard (non-admin) users unless elevated privileges are absolutely required. These measures reduce the risk of these accounts being exploited as a bypass.'})]})]}),"\n",(0,o.jsxs)(n.p,{children:["To exempt a user from CAC enforcement, add them to the ",(0,o.jsx)(n.code,{children:"EXEMPT_GROUP"}),". The script below checks for the existence of the group, creates it if necessary, and adds the specified user."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash\n# Exempt a user from CAC enforcement by adding them to the EXEMPT_GROUP\n\nEXEMPT_USER="username_here"   # <-- Set this to the username you want to exempt\nEXEMPT_GROUP="EXEMPT_GROUP"\n\n# Check if the group exists, create if it does not\nif ! dscl . -read /Groups/"$EXEMPT_GROUP" &>/dev/null; then\n    sudo dscl . -create /Groups/"$EXEMPT_GROUP"\n    sudo dscl . -create /Groups/"$EXEMPT_GROUP" RealName "CAC Exempt Users"\n    sudo dscl . -create /Groups/"$EXEMPT_GROUP" passwd "*"\n    sudo dscl . -create /Groups/"$EXEMPT_GROUP" gid "600"\nfi\n\n# Add the user to the group\nsudo dseditgroup -o edit -a "$EXEMPT_USER" -t user "$EXEMPT_GROUP"\n'})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Set the ",(0,o.jsx)(n.code,{children:"EXEMPT_USER"})," variable at the top of the script to the username you wish to exempt."]}),"\n",(0,o.jsx)(n.li,{children:"This script will ensure the group exists and add the user to it."}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"uninstall-pam-configuration",children:(0,o.jsx)(n.strong,{children:"Uninstall PAM Configuration"})}),"\n",(0,o.jsxs)(n.p,{children:["To revert the PAM configuration to the macOS defaults (removing CAC enforcement for ",(0,o.jsx)(n.code,{children:"sudo"}),", ",(0,o.jsx)(n.code,{children:"login"}),", and ",(0,o.jsx)(n.code,{children:"su"}),"), use the following script:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"#!/bin/bash\n# This script restores the default macOS PAM configuration for sudo, login, and su.\n\n# Default sudo PAM file (no CAC)\ncat > /etc/pam.d/sudo << SUDO_END\n# sudo: auth account password session\nauth       sufficient     pam_smartcard.so\nauth       required       pam_opendirectory.so\naccount    required       pam_permit.so\npassword   required       pam_deny.so\nsession    required       pam_permit.so\nSUDO_END\n\nchmod 444 /etc/pam.d/sudo\nchown root:wheel /etc/pam.d/sudo\n\n# Default login PAM file\ncat > /etc/pam.d/login << LOGIN_END\n# login: auth account password session\nauth       optional       pam_krb5.so use_kcminit\nauth       optional       pam_ntlm.so try_first_pass\nauth       optional       pam_mount.so try_first_pass\nauth       required       pam_opendirectory.so try_first_pass\naccount    required       pam_nologin.so\naccount    required       pam_opendirectory.so\npassword   required       pam_opendirectory.so\nsession    required       pam_launchd.so\nsession    required       pam_uwtmp.so\nsession    optional       pam_mount.so\nLOGIN_END\n\nchmod 644 /etc/pam.d/login\nchown root:wheel /etc/pam.d/login\n\n# Default su PAM file\ncat > /etc/pam.d/su << SU_END\n# su: auth account session\nauth       sufficient     pam_rootok.so\nauth       required       pam_opendirectory.so\naccount    required       pam_group.so no_warn group=admin,wheel ruser root_only fail_safe\naccount    required       pam_opendirectory.so no_check_shell\npassword   required       pam_opendirectory.so\nsession    required       pam_launchd.so\nSU_END\n\nchmod 644 /etc/pam.d/su\nchown root:wheel /etc/pam.d/su\n"})}),"\n",(0,o.jsx)(n.p,{children:"This will restore the default PAM configuration for the main authentication functions."}),"\n",(0,o.jsx)("small",{children:(0,o.jsxs)(n.admonition,{title:"Feedback?",type:"note",children:[(0,o.jsx)(n.p,{children:(0,o.jsxs)(n.em,{children:["If you found an error, noticed something missing, or need additional help, please ",(0,o.jsx)(n.a,{href:"https://github.com/cocopuff2u/cac-for-mac/issues",children:"submit feedback on GitHub"})," or start a ",(0,o.jsx)(n.a,{href:"https://github.com/cocopuff2u/cac-for-mac/discussions",children:"GitHub discussion"}),"."]})}),(0,o.jsx)(n.p,{children:(0,o.jsxs)(n.em,{children:["If you'd like to contribute improvements to this guide, feel free to submit a ",(0,o.jsx)(n.a,{href:"https://github.com/cocopuff2u/cac-for-mac/pulls",children:"pull request"})," or select ",(0,o.jsx)(n.code,{children:"edit this page"})," below."]})})]})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},1470:(e,n,t)=>{t.d(n,{A:()=>w});var r=t(6540),o=t(4164),a=t(3104),i=t(6347),s=t(205),c=t(7485),l=t(1682),d=t(679);function u(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return u(e).map((({props:{value:e,label:n,attributes:t,default:r}})=>({value:e,label:n,attributes:t,default:r})))}(t);return function(e){const n=(0,l.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function h({value:e,tabValues:n}){return n.some((n=>n.value===e))}function m({queryString:e=!1,groupId:n}){const t=(0,i.W6)(),o=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,c.aZ)(o),(0,r.useCallback)((e=>{if(!o)return;const n=new URLSearchParams(t.location.search);n.set(o,e),t.replace({...t.location,search:n.toString()})}),[o,t])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:o}=e,a=p(e),[i,c]=(0,r.useState)((()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!h({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const t=n.find((e=>e.default))??n[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:a}))),[l,u]=m({queryString:t,groupId:o}),[f,g]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[t,o]=(0,d.Dv)(n);return[t,(0,r.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:o}),y=(()=>{const e=l??f;return h({value:e,tabValues:a})?e:null})();(0,s.A)((()=>{y&&c(y)}),[y]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!h({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);c(e),u(e),g(e)}),[u,g,a]),tabValues:a}}var g=t(2303);const y={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=t(4848);function C({className:e,block:n,selectedValue:t,selectValue:r,tabValues:i}){const s=[],{blockElementScrollPositionUntilNextRender:c}=(0,a.a_)(),l=e=>{const n=e.currentTarget,o=s.indexOf(n),a=i[o].value;a!==t&&(c(n),r(a))},d=e=>{let n=null;switch(e.key){case"Enter":l(e);break;case"ArrowRight":{const t=s.indexOf(e.currentTarget)+1;n=s[t]??s[0];break}case"ArrowLeft":{const t=s.indexOf(e.currentTarget)-1;n=s[t]??s[s.length-1];break}}n?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":n},e),children:i.map((({value:e,label:n,attributes:r})=>(0,x.jsx)("li",{role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,ref:e=>{s.push(e)},onKeyDown:d,onClick:l,...r,className:(0,o.A)("tabs__item",y.tabItem,r?.className,{"tabs__item--active":t===e}),children:n??e},e)))})}function b({lazy:e,children:n,selectedValue:t}){const a=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=a.find((e=>e.props.value===t));return e?(0,r.cloneElement)(e,{className:(0,o.A)("margin-top--md",e.props.className)}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:a.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==t})))})}function j(e){const n=f(e);return(0,x.jsxs)("div",{className:(0,o.A)("tabs-container",y.tabList),children:[(0,x.jsx)(C,{...n,...e}),(0,x.jsx)(b,{...n,...e})]})}function w(e){const n=(0,g.A)();return(0,x.jsx)(j,{...e,children:u(e.children)},String(n))}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>s});var r=t(6540);const o={},a=r.createContext(o);function i(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(a.Provider,{value:n},e.children)}},9365:(e,n,t)=>{t.d(n,{A:()=>i});t(6540);var r=t(4164);const o={tabItem:"tabItem_Ymn6"};var a=t(4848);function i({children:e,hidden:n,className:t}){return(0,a.jsx)("div",{role:"tabpanel",className:(0,r.A)(o.tabItem,t),hidden:n,children:e})}}}]);