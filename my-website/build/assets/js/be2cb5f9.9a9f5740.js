"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[425],{1470:(e,i,t)=>{t.d(i,{A:()=>v});var n=t(6540),r=t(4164),a=t(3104),s=t(6347),o=t(205),l=t(7485),c=t(1682),d=t(679);function h(e){return n.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:i}=e;return!!i&&"object"==typeof i&&"value"in i}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:i,children:t}=e;return(0,n.useMemo)((()=>{const e=i??function(e){return h(e).map((({props:{value:e,label:i,attributes:t,default:n}})=>({value:e,label:i,attributes:t,default:n})))}(t);return function(e){const i=(0,c.XI)(e,((e,i)=>e.value===i.value));if(i.length>0)throw new Error(`Docusaurus error: Duplicate values "${i.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[i,t])}function p({value:e,tabValues:i}){return i.some((i=>i.value===e))}function f({queryString:e=!1,groupId:i}){const t=(0,s.W6)(),r=function({queryString:e=!1,groupId:i}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!i)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return i??null}({queryString:e,groupId:i});return[(0,l.aZ)(r),(0,n.useCallback)((e=>{if(!r)return;const i=new URLSearchParams(t.location.search);i.set(r,e),t.replace({...t.location,search:i.toString()})}),[r,t])]}function x(e){const{defaultValue:i,queryString:t=!1,groupId:r}=e,a=u(e),[s,l]=(0,n.useState)((()=>function({defaultValue:e,tabValues:i}){if(0===i.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!p({value:e,tabValues:i}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${i.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const t=i.find((e=>e.default))??i[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:i,tabValues:a}))),[c,h]=f({queryString:t,groupId:r}),[x,y]=function({groupId:e}){const i=function(e){return e?`docusaurus.tab.${e}`:null}(e),[t,r]=(0,d.Dv)(i);return[t,(0,n.useCallback)((e=>{i&&r.set(e)}),[i,r])]}({groupId:r}),m=(()=>{const e=c??x;return p({value:e,tabValues:a})?e:null})();(0,o.A)((()=>{m&&l(m)}),[m]);return{selectedValue:s,selectValue:(0,n.useCallback)((e=>{if(!p({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);l(e),h(e),y(e)}),[h,y,a]),tabValues:a}}var y=t(2303);const m={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=t(4848);function j({className:e,block:i,selectedValue:t,selectValue:n,tabValues:s}){const o=[],{blockElementScrollPositionUntilNextRender:l}=(0,a.a_)(),c=e=>{const i=e.currentTarget,r=o.indexOf(i),a=s[r].value;a!==t&&(l(i),n(a))},d=e=>{let i=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=o.indexOf(e.currentTarget)+1;i=o[t]??o[0];break}case"ArrowLeft":{const t=o.indexOf(e.currentTarget)-1;i=o[t]??o[o.length-1];break}}i?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":i},e),children:s.map((({value:e,label:i,attributes:n})=>(0,g.jsx)("li",{role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,ref:e=>{o.push(e)},onKeyDown:d,onClick:c,...n,className:(0,r.A)("tabs__item",m.tabItem,n?.className,{"tabs__item--active":t===e}),children:i??e},e)))})}function A({lazy:e,children:i,selectedValue:t}){const a=(Array.isArray(i)?i:[i]).filter(Boolean);if(e){const e=a.find((e=>e.props.value===t));return e?(0,n.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:a.map(((e,i)=>(0,n.cloneElement)(e,{key:i,hidden:e.props.value!==t})))})}function b(e){const i=x(e);return(0,g.jsxs)("div",{className:(0,r.A)("tabs-container",m.tabList),children:[(0,g.jsx)(j,{...i,...e}),(0,g.jsx)(A,{...i,...e})]})}function v(e){const i=(0,y.A)();return(0,g.jsx)(b,{...e,children:h(e.children)},String(i))}},4684:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>l,metadata:()=>n,toc:()=>h});const n=JSON.parse('{"id":"certificate/Any-Certificates-Admins","title":"General | Admin","description":"This guide is for admins who need to deploy required certificates\u2014such as those issued by a system administrator, IT department, or trusted authority\u2014to managed Macs using MDM.","source":"@site/docs/certificate/Any-Certificates-Admins.md","sourceDirName":"certificate","slug":"/certificate/Any-Certificates-Admins","permalink":"/docs/certificate/Any-Certificates-Admins","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/certificate/Any-Certificates-Admins.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"title":"General | Admin"},"sidebar":"certificateGuideSidebar","previous":{"title":"General | User","permalink":"/docs/certificate/Any-Certificates-Users"},"next":{"title":"DoD | User","permalink":"/docs/certificate/DoD-Certificates-Users"}}');var r=t(4848),a=t(8453),s=t(1470),o=t(9365);const l={sidebar_position:3,title:"General | Admin"},c="Certificate Import \u2013 Admin Guide",d={},h=[{value:"<strong>Manual Method</strong>",id:"manual-method",level:2},{value:"Step 1: Acquire Required Certificates",id:"step-1-acquire-required-certificates",level:3},{value:"Step 2: Convert Certificates to Base64",id:"step-2-convert-certificates-to-base64",level:3},{value:"Step 3: Build and Deploy the Plist (Configuration Profile)",id:"step-3-build-and-deploy-the-plist-configuration-profile",level:3},{value:"Step 4: Upload the Profile to MDM",id:"step-4-upload-the-profile-to-mdm",level:3},{value:"Step 5: Assign and Deploy the Profile",id:"step-5-assign-and-deploy-the-profile",level:3},{value:"Step 6: Verify on Devices",id:"step-6-verify-on-devices",level:3},{value:"<strong>MDM GUI Method</strong>",id:"mdm-gui-method",level:2},{value:"Step 1: Acquire Required Certificates",id:"step-1-acquire-required-certificates-1",level:3},{value:"Step 2: Upload Certificates to MDM",id:"step-2-upload-certificates-to-mdm",level:3},{value:"Step 3: Configure Configuration Settings (if available)",id:"step-3-configure-configuration-settings-if-available",level:3},{value:"Step 4: Assign and Deploy the Profile",id:"step-4-assign-and-deploy-the-profile",level:3},{value:"Step 5: Verify on Devices",id:"step-5-verify-on-devices",level:3},{value:"<strong>Troubleshooting Steps</strong>",id:"troubleshooting-steps",level:2}];function u(e){const i={a:"a",admonition:"admonition",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsx)(i.h1,{id:"certificate-import--admin-guide",children:"Certificate Import \u2013 Admin Guide"})}),"\n",(0,r.jsx)(i.p,{children:"This guide is for admins who need to deploy required certificates\u2014such as those issued by a system administrator, IT department, or trusted authority\u2014to managed Macs using MDM."}),"\n",(0,r.jsx)(i.p,{children:"You will find two approaches for deploying certificates with MDM:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.a,{href:"#manual-method",children:(0,r.jsx)(i.strong,{children:"Manual Method:"})}),(0,r.jsx)(i.br,{}),"\n","Best suited for deploying a large number of certificates at once. This method involves converting each certificate to base64 and combining them into a single plist or configuration profile file for deployment. The process can be scripted, enabling admins to efficiently create and deploy profiles containing many certificates."]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.a,{href:"#mdm-gui-method",children:(0,r.jsx)(i.strong,{children:"MDM Deployment:"})}),(0,r.jsx)(i.br,{}),"\n","Recommended when deploying a small number of certificates or when certificates are associated with specific configuration profiles (such as Wi-Fi or VPN settings). This approach uses the MDM's built-in GUI to upload and manage certificates and related settings."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"Both methods achieve the same result\u2014installing the necessary certificates\u2014but differ in terms of scalability and automation."}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h2,{id:"manual-method",children:(0,r.jsx)(i.strong,{children:"Manual Method"})}),"\n",(0,r.jsx)(i.p,{children:"To manually deploy certificates you can create a configuration profile (plist file) containing the required certificates and install it on each device."}),"\n",(0,r.jsx)(i.h3,{id:"step-1-acquire-required-certificates",children:"Step 1: Acquire Required Certificates"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Download the necessary Root and Intermediate CA certificates that need to be trusted on your managed devices."}),"\n",(0,r.jsx)(i.li,{children:"These certificates are typically provided by your organization or the relevant certificate authority."}),"\n",(0,r.jsxs)(i.li,{children:["Certificates are usually available in ",(0,r.jsx)(i.code,{children:".cer"}),", ",(0,r.jsx)(i.code,{children:".crt"}),", or ",(0,r.jsx)(i.code,{children:".pem"})," formats. Ensure you have all required files before proceeding."]}),"\n",(0,r.jsx)(i.li,{children:"If you are unsure which certificates are needed, consult your IT/security team or refer to your organization's documentation."}),"\n",(0,r.jsx)(i.li,{children:"Store the downloaded certificates in a secure location for creating your plist"}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"step-2-convert-certificates-to-base64",children:"Step 2: Convert Certificates to Base64"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["Use the ",(0,r.jsx)(i.code,{children:"base64"})," command to encode each certificate file (e.g., ",(0,r.jsx)(i.code,{children:".cer"}),", ",(0,r.jsx)(i.code,{children:".crt"}),", or ",(0,r.jsx)(i.code,{children:".pem"}),"):","\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{children:"base64 -i your-certificate.cer\n"})}),"\n"]}),"\n",(0,r.jsx)(i.li,{children:"Copy the entire output (the encoded certificate data)."}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"step-3-build-and-deploy-the-plist-configuration-profile",children:"Step 3: Build and Deploy the Plist (Configuration Profile)"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["Create a new ",(0,r.jsx)(i.code,{children:".mobileconfig"})," or ",(0,r.jsx)(i.code,{children:".plist"})," file."]}),"\n",(0,r.jsxs)(i.li,{children:["For multiple certificates, add multiple ",(0,r.jsx)(i.code,{children:"<dict>...</dict>"})," blocks inside the ",(0,r.jsx)(i.code,{children:"<array>"})," of the ",(0,r.jsx)(i.code,{children:"PayloadContent"})," section."]}),"\n",(0,r.jsxs)(i.li,{children:["Place the certificate payload(s) inside a standard Apple configuration profile structure. See ",(0,r.jsx)(i.a,{href:"https://developer.apple.com/documentation/devicemanagement/certificateroot",children:"Apple's documentation"})," for details."]}),"\n"]}),"\n",(0,r.jsxs)(s.A,{children:[(0,r.jsx)(o.A,{value:"Path",label:"Example Single Certificate",default:!0,children:(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-xml",children:'\x3c!-- Example: certificates.mobileconfig --\x3e\n<?xml version="1.0" encoding="UTF-8"?>\n<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">\n<plist version="1.0">\n<dict>\n  <key>PayloadContent</key> \x3c!-- Array of certificate payloads --\x3e\n  <array>\n    <dict>\n      <key>AllowAllAppsAccess</key> \x3c!-- (Optional) Allow all apps to access the certificate --\x3e\n      <true/>\n      <key>KeyIsExtractable</key> \x3c!-- (Optional) Allow private key extraction --\x3e\n      <true/>\n      <key>PayloadCertificateFileName</key> \x3c!-- Filename for the certificate --\x3e\n      <string>RootCA.cer</string>\n      <key>PayloadContent</key> \x3c!-- Base64-encoded certificate data --\x3e\n      <data>\n      MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA...\n      </data>\n      <key>PayloadDescription</key> \x3c!-- Description shown in profile UI --\x3e\n      <string>Installs Root CA</string>\n      <key>PayloadDisplayName</key> \x3c!-- Display name in profile UI --\x3e\n      <string>Root CA</string>\n      <key>PayloadIdentifier</key> \x3c!-- Unique identifier for this payload --\x3e\n      <string>com.example.certificate.rootca</string>\n      <key>PayloadType</key> \x3c!-- Type of payload (certificate) --\x3e\n      <string>com.apple.security.root</string>\n      <key>PayloadUUID</key> \x3c!-- Unique UUID for this payload --\x3e\n      <string>UUID-ROOT-CA-1234</string>\n      <key>PayloadVersion</key> \x3c!-- Payload version, always 1 --\x3e\n      <integer>1</integer>\n    </dict>\n  </array>\n  <key>PayloadDisplayName</key> \x3c!-- Profile display name --\x3e\n  <string>DoD Certificates</string>\n  <key>PayloadIdentifier</key> \x3c!-- Unique identifier for the profile --\x3e\n  <string>com.example.certificates.profile</string>\n  <key>PayloadRemovalDisallowed</key> \x3c!-- Allow removal of the profile --\x3e\n  <false/>\n  <key>PayloadType</key> \x3c!-- Profile type --\x3e\n  <string>Configuration</string>\n  <key>PayloadUUID</key> \x3c!-- Unique UUID for the profile --\x3e\n  <string>UUID-PROFILE-9999</string>\n  <key>PayloadVersion</key> \x3c!-- Profile version, always 1 --\x3e\n  <integer>1</integer>\n</dict>\n</plist>\n'})})}),(0,r.jsx)(o.A,{value:"Image",label:"Example Multiple Certificate",children:(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-xml",children:'\x3c!-- Example: certificates.mobileconfig --\x3e\n<?xml version="1.0" encoding="UTF-8"?>\n<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">\n<plist version="1.0">\n<dict>\n  <key>PayloadContent</key> \x3c!-- Array of certificate payloads --\x3e\n  <array>\n    <dict>\n      <key>AllowAllAppsAccess</key> \x3c!-- (Optional) Allow all apps to access the certificate --\x3e\n      <true/>\n      <key>KeyIsExtractable</key> \x3c!-- (Optional) Allow private key extraction --\x3e\n      <true/>\n      <key>PayloadCertificateFileName</key> \x3c!-- Filename for the certificate --\x3e\n      <string>RootCA.cer</string>\n      <key>PayloadContent</key> \x3c!-- Base64-encoded certificate data --\x3e\n      <data>\n      MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA...\n      </data>\n      <key>PayloadDescription</key> \x3c!-- Description shown in profile UI --\x3e\n      <string>Installs Root CA</string>\n      <key>PayloadDisplayName</key> \x3c!-- Display name in profile UI --\x3e\n      <string>Root CA</string>\n      <key>PayloadIdentifier</key> \x3c!-- Unique identifier for this payload --\x3e\n      <string>com.example.certificate.rootca</string>\n      <key>PayloadType</key> \x3c!-- Type of payload (certificate) --\x3e\n      <string>com.apple.security.root</string>\n      <key>PayloadUUID</key> \x3c!-- Unique UUID for this payload --\x3e\n      <string>UUID-ROOT-CA-1234</string>\n      <key>PayloadVersion</key> \x3c!-- Payload version, always 1 --\x3e\n      <integer>1</integer>\n    </dict>\n    <dict>\n      <key>AllowAllAppsAccess</key> \x3c!-- (Optional) Allow all apps to access the certificate --\x3e\n      <true/>\n      <key>KeyIsExtractable</key> \x3c!-- (Optional) Allow private key extraction --\x3e\n      <true/>\n      <key>PayloadCertificateFileName</key> \x3c!-- Filename for the certificate --\x3e\n      <string>IntermediateCA.cer</string>\n      <key>PayloadContent</key> \x3c!-- Base64-encoded certificate data --\x3e\n      <data>\n      MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA...\n      </data>\n      <key>PayloadDescription</key> \x3c!-- Description shown in profile UI --\x3e\n      <string>Installs Intermediate CA</string>\n      <key>PayloadDisplayName</key> \x3c!-- Display name in profile UI --\x3e\n      <string>Intermediate CA</string>\n      <key>PayloadIdentifier</key> \x3c!-- Unique identifier for this payload --\x3e\n      <string>com.example.certificate.intermediateca</string>\n      <key>PayloadType</key> \x3c!-- Type of payload (certificate) --\x3e\n      <string>com.apple.security.root</string>\n      <key>PayloadUUID</key> \x3c!-- Unique UUID for this payload --\x3e\n      <string>UUID-INTERMEDIATE-CA-5678</string>\n      <key>PayloadVersion</key> \x3c!-- Payload version, always 1 --\x3e\n      <integer>1</integer>\n    </dict>\n  </array>\n  <key>PayloadDisplayName</key> \x3c!-- Profile display name --\x3e\n  <string>DoD Certificates</string>\n  <key>PayloadIdentifier</key> \x3c!-- Unique identifier for the profile --\x3e\n  <string>com.example.certificates.profile</string>\n  <key>PayloadRemovalDisallowed</key> \x3c!-- Allow removal of the profile --\x3e\n  <false/>\n  <key>PayloadType</key> \x3c!-- Profile type --\x3e\n  <string>Configuration</string>\n  <key>PayloadUUID</key> \x3c!-- Unique UUID for the profile --\x3e\n  <string>UUID-PROFILE-9999</string>\n  <key>PayloadVersion</key> \x3c!-- Profile version, always 1 --\x3e\n  <integer>1</integer>\n</dict>\n</plist>\n'})})})]}),"\n",(0,r.jsx)(i.admonition,{title:"TIP",type:"note",children:(0,r.jsxs)(i.p,{children:["You can use tools like ",(0,r.jsx)(i.a,{href:"https://github.com/ProfileCreator/ProfileCreator",children:"ProfileCreator"})," to help build configuration profiles with embedded certificates."]})}),"\n",(0,r.jsx)(i.admonition,{title:"Example Automation",type:"important",children:(0,r.jsxs)(i.p,{children:["While ",(0,r.jsx)(i.a,{href:"https://github.com/cocopuff2u/MacOS_GOV_Scripts/blob/main/Keychain_And_Certificates_Scripts/Generate_DoD_Certs_Mobileconfig.py",children:"this example script"})," is designed for a different use case, it demonstrates a complete workflow for downloading certificates and generating a ",(0,r.jsx)(i.code,{children:".mobileconfig"})," file ready for upload. You can adapt this approach to automate building your own configuration profiles containing all required certificates."]})}),"\n",(0,r.jsx)(i.h3,{id:"step-4-upload-the-profile-to-mdm",children:"Step 4: Upload the Profile to MDM"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["Upload the generated ",(0,r.jsx)(i.code,{children:".mobileconfig"})," or ",(0,r.jsx)(i.code,{children:".plist"})," file to your MDM solution, following your MDM provider's documentation for importing custom configuration profiles."]}),"\n",(0,r.jsxs)(i.li,{children:["For reference, here are guides for common MDM providers:","\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"https://learn.jamf.com/en-US/bundle/technical-paper-integrating-ad-cs-current/page/Distributing_a_Certificate_Using_a_Configuration_Profile.html",children:"Jamf Pro: Uploading Configuration Profiles"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"https://learn.microsoft.com/en-us/intune/intune-service/protect/certificates-trusted-root",children:"Microsoft Intune: Add or create a device configuration profile"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"https://docs.omnissa.com/bundle/workspace-one-access-deployment-with-UEM/page/AddCertificateTemplateinWorkspaceONEUEM.html",children:"VMware Workspace ONE: Add a Configuration Profile"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"https://support.kandji.io/kb/certificate-profile",children:"Kandji: Add and Deploy Configuration Profiles"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"step-5-assign-and-deploy-the-profile",children:"Step 5: Assign and Deploy the Profile"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Assign the uploaded profile to the appropriate device groups or users in your MDM."}),"\n",(0,r.jsx)(i.li,{children:"Push the profile to all managed devices."}),"\n"]}),"\n",(0,r.jsx)(i.admonition,{type:"important",children:(0,r.jsx)(i.p,{children:(0,r.jsx)(i.em,{children:"If a certificate already exists on a device and you deploy it via MDM, the MDM-managed certificate will take control and override any local settings for that certificate. When you remove the certificate profile from MDM, the certificate will be completely removed from the device."})})}),"\n",(0,r.jsx)(i.h3,{id:"step-6-verify-on-devices",children:"Step 6: Verify on Devices"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["On a managed device, open ",(0,r.jsx)(i.strong,{children:"Keychain Access"})," and check the ",(0,r.jsx)(i.strong,{children:"System"})," keychain for the imported certificates."]}),"\n",(0,r.jsx)(i.li,{children:'Ensure Root CAs are trusted (orange, "Always Trust") and Intermediates are present (blue).'}),"\n",(0,r.jsx)(i.li,{children:"Test access to required resources."}),"\n"]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Visual Examples:"}),(0,r.jsx)(i.br,{}),"\n","Below is a table showing what a properly trusted Root CA certificate and a failed trust setting look like in Keychain Access, as well as the color difference between Root and Intermediate CAs:"]}),"\n",(0,r.jsx)("div",{align:"center",children:(0,r.jsxs)(i.table,{children:[(0,r.jsx)(i.thead,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.th,{style:{textAlign:"center"},children:"Good (Always Trust) Root CA"}),(0,r.jsx)(i.th,{style:{textAlign:"center"},children:"Failed Trust Root CA"}),(0,r.jsx)(i.th,{style:{textAlign:"center"},children:"Root CA (Orange)"}),(0,r.jsx)(i.th,{style:{textAlign:"center"},children:"Intermediate CA (Blue)"})]})}),(0,r.jsx)(i.tbody,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{style:{textAlign:"center"},children:(0,r.jsx)("img",{src:"/img/certificate-guide-img/CertSmallRoot_UserTrust.webp",alt:"Root CA Always Trust Example",width:"25"})}),(0,r.jsx)(i.td,{style:{textAlign:"center"},children:(0,r.jsx)("img",{src:"/img/certificate-guide-img/CertSmallRoot_Invalid.webp",alt:"Root CA Not Trusted Example",width:"25"})}),(0,r.jsx)(i.td,{style:{textAlign:"center"},children:(0,r.jsx)("img",{src:"/img/certificate-guide-img/CertLargeRoot.webp",alt:"Example Root CA certificate file",width:"50"})}),(0,r.jsx)(i.td,{style:{textAlign:"center"},children:(0,r.jsx)("img",{src:"/img/certificate-guide-img/CertLargeStd.webp",alt:"Example Intermediate CA certificate file",width:"50"})})]})})]})}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h2,{id:"mdm-gui-method",children:(0,r.jsx)(i.strong,{children:"MDM GUI Method"})}),"\n",(0,r.jsx)(i.h3,{id:"step-1-acquire-required-certificates-1",children:"Step 1: Acquire Required Certificates"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Download the necessary Root and Intermediate CA certificates that need to be trusted on your managed devices."}),"\n",(0,r.jsx)(i.li,{children:"These certificates are typically provided by your organization or the relevant certificate authority."}),"\n",(0,r.jsxs)(i.li,{children:["Certificates are usually available in ",(0,r.jsx)(i.code,{children:".cer"}),", ",(0,r.jsx)(i.code,{children:".crt"}),", or ",(0,r.jsx)(i.code,{children:".pem"})," formats. Ensure you have all required files before proceeding."]}),"\n",(0,r.jsx)(i.li,{children:"If you are unsure which certificates are needed, consult your IT/security team or refer to your organization's documentation."}),"\n",(0,r.jsx)(i.li,{children:"Store the downloaded certificates in a secure location for uploading to your MDM."}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"step-2-upload-certificates-to-mdm",children:"Step 2: Upload Certificates to MDM"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Take the certificate files and upload them into your MDM according to your MDM provider's documentation."}),"\n",(0,r.jsx)(i.li,{children:"Typically, you will create a new certificate payload or profile and add all required Root and Intermediate CA certificates."}),"\n",(0,r.jsxs)(i.li,{children:["For reference, here are guides for common MDM providers:","\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"https://learn.jamf.com/en-US/bundle/technical-paper-integrating-ad-cs-current/page/Distributing_a_Certificate_Using_a_Configuration_Profile.html",children:"Jamf Pro: Uploading Configuration Profiles"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"https://learn.microsoft.com/en-us/intune/intune-service/protect/certificates-trusted-root",children:"Microsoft Intune: Add or create a device configuration profile"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"https://docs.omnissa.com/bundle/workspace-one-access-deployment-with-UEM/page/AddCertificateTemplateinWorkspaceONEUEM.html",children:"VMware Workspace ONE: Add a Configuration Profile"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"https://support.kandji.io/kb/certificate-profile",children:"Kandji: Add and Deploy Configuration Profiles"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"step-3-configure-configuration-settings-if-available",children:"Step 3: Configure Configuration Settings (if available)"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:'Many MDMs allow you to configure trust settings for certificates. For Root CAs, set the trust level to "Always Trust" if your MDM supports it.'}),"\n",(0,r.jsxs)(i.li,{children:["When creating the certificate payload or profile, you may have the option to specify additional keys, such as:","\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"AllowAllAppsAccess"})," \u2013 allows all applications to access the certificate."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"KeyIsExtractable"})," \u2013 allows the private key to be exported or extracted (if applicable)."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["The specific keys and settings available depend on the certificate payload type and your MDM platform. For detailed information on supported keys and configuration options, see:","\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"https://developer.apple.com/documentation/devicemanagement/acmecertificate",children:"Apple ACMECertificate Payload Keys"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"https://developer.apple.com/documentation/devicemanagement/certificateroot",children:"Apple CertificateRoot Payload Keys"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.li,{children:"Always consult your MDM provider's documentation for instructions on setting these options and configuring trust."}),"\n",(0,r.jsx)(i.li,{children:"After configuration, review the profile for accuracy before deploying."}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"step-4-assign-and-deploy-the-profile",children:"Step 4: Assign and Deploy the Profile"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Assign the uploaded profile to the appropriate device groups or users in your MDM."}),"\n",(0,r.jsx)(i.li,{children:"Push the profile to all managed devices."}),"\n"]}),"\n",(0,r.jsx)(i.admonition,{type:"important",children:(0,r.jsx)(i.p,{children:(0,r.jsx)(i.em,{children:"If a certificate already exists on a device and you deploy it via MDM, the MDM-managed certificate will take control and override any local settings for that certificate. When you remove the certificate profile from MDM, the certificate will be completely removed from the device."})})}),"\n",(0,r.jsx)(i.h3,{id:"step-5-verify-on-devices",children:"Step 5: Verify on Devices"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["On a managed device, open ",(0,r.jsx)(i.strong,{children:"Keychain Access"})," and check the ",(0,r.jsx)(i.strong,{children:"System"})," keychain for the imported certificates."]}),"\n",(0,r.jsx)(i.li,{children:'Ensure Root CAs are trusted (orange, "Always Trust") and Intermediates are present (blue).'}),"\n",(0,r.jsx)(i.li,{children:"Test access to required resources."}),"\n"]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Visual Examples:"}),(0,r.jsx)(i.br,{}),"\n","Below is a table showing what a properly trusted Root CA certificate and a failed trust setting look like in Keychain Access, as well as the color difference between Root and Intermediate CAs:"]}),"\n",(0,r.jsx)("div",{align:"center",children:(0,r.jsxs)(i.table,{children:[(0,r.jsx)(i.thead,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.th,{style:{textAlign:"center"},children:"Good (Always Trust) Root CA"}),(0,r.jsx)(i.th,{style:{textAlign:"center"},children:"Failed Trust Root CA"}),(0,r.jsx)(i.th,{style:{textAlign:"center"},children:"Root CA (Orange)"}),(0,r.jsx)(i.th,{style:{textAlign:"center"},children:"Intermediate CA (Blue)"})]})}),(0,r.jsx)(i.tbody,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{style:{textAlign:"center"},children:(0,r.jsx)("img",{src:"/img/certificate-guide-img/CertSmallRoot_UserTrust.webp",alt:"Root CA Always Trust Example",width:"25"})}),(0,r.jsx)(i.td,{style:{textAlign:"center"},children:(0,r.jsx)("img",{src:"/img/certificate-guide-img/CertSmallRoot_Invalid.webp",alt:"Root CA Not Trusted Example",width:"25"})}),(0,r.jsx)(i.td,{style:{textAlign:"center"},children:(0,r.jsx)("img",{src:"/img/certificate-guide-img/CertLargeRoot.webp",alt:"Example Root CA certificate file",width:"50"})}),(0,r.jsx)(i.td,{style:{textAlign:"center"},children:(0,r.jsx)("img",{src:"/img/certificate-guide-img/CertLargeStd.webp",alt:"Example Intermediate CA certificate file",width:"50"})})]})})]})}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h2,{id:"troubleshooting-steps",children:(0,r.jsx)(i.strong,{children:"Troubleshooting Steps"})}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.strong,{children:"Certificates not appearing on devices:"})}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Ensure the profile was assigned and pushed to the correct devices."}),"\n",(0,r.jsx)(i.li,{children:"Check for errors in the MDM deployment logs."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.strong,{children:"Certificates not trusted:"})}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Verify trust settings in the MDM profile."}),"\n",(0,r.jsx)(i.li,{children:"Remove old/expired certificates from devices before deploying new ones."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.strong,{children:"Profile installation fails:"})}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Check for conflicting profiles or existing certificates."}),"\n",(0,r.jsx)(i.li,{children:"Ensure devices are enrolled and communicating with MDM."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.strong,{children:"Access to resources still fails:"})}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["Confirm certificates are in the ",(0,r.jsx)(i.strong,{children:"System"})," keychain and trusted."]}),"\n",(0,r.jsx)(i.li,{children:"Restart the device and test again."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)("small",{children:(0,r.jsxs)(i.admonition,{title:"Feedback?",type:"note",children:[(0,r.jsx)(i.p,{children:(0,r.jsxs)(i.em,{children:["If you found an error, noticed something missing, or need additional help, please ",(0,r.jsx)(i.a,{href:"https://github.com/cocopuff2u/cac-for-mac/issues",children:"submit feedback on GitHub"})," or start a ",(0,r.jsx)(i.a,{href:"https://github.com/cocopuff2u/cac-for-mac/discussions",children:"GitHub discussion"}),"."]})}),(0,r.jsx)(i.p,{children:(0,r.jsxs)(i.em,{children:["If you'd like to contribute improvements to this guide, feel free to submit a ",(0,r.jsx)(i.a,{href:"https://github.com/cocopuff2u/cac-for-mac/pulls",children:"pull request"})," or select ",(0,r.jsx)(i.code,{children:"edit this page"})," below."]})})]})})]})}function p(e={}){const{wrapper:i}={...(0,a.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},8453:(e,i,t)=>{t.d(i,{R:()=>s,x:()=>o});var n=t(6540);const r={},a=n.createContext(r);function s(e){const i=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),n.createElement(a.Provider,{value:i},e.children)}},9365:(e,i,t)=>{t.d(i,{A:()=>s});t(6540);var n=t(4164);const r={tabItem:"tabItem_Ymn6"};var a=t(4848);function s({children:e,hidden:i,className:t}){return(0,a.jsx)("div",{role:"tabpanel",className:(0,n.A)(r.tabItem,t),hidden:i,children:e})}}}]);